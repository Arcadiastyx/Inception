### COMMANDS ###
# docker-compose up --build                ---> build and run the containers
# docker-compose up -d                     ---> run the containers in the background
# docker ps -a                             ---> list all containers
# docker images (-a)                       ---> list all images
# docker exec -it <nom du contenaire> bash ---> access to the container terminal
# docker-compose down                      ---> stop and remove all containers
# docker-compose down -v                   ---> stop and remove all containers and volumes
# docker-compose down --rmi all            ---> stop and remove all containers and images


### INFO ###
##Quand on build un contenaire il et possible de se balader dans le contenaire pour voir les fichiers via son terminal

## VOLUMES : dans un fichier Docker Compose est utilisée pour :
# 1.Stockage de données persistantes (bases de données, fichiers de configuration, etc.)
# 2.Partage de données entre les conteneurs
# 3.Montage de fichiers ou répertoires de l'hôte

version: '3.8'

services:
  mariadb:
    container_name: mariadb
    image: mariadb
    build: 
      context: ./requirements/mariadb
    volumes:
      - mariadb:/var/lib/mariadb
    networks:
      - network
    expose:
      - "3306"
    env_file: .env
    restart: always
    

networks:
  network:
    driver: bridge


##############################################################################


# services:
#   nginx:
#     container_name: nginx
#     image: nginx
#     volumes:
#       - wordpress:/var/www/html
#     networks:
#       - inception_network
#     depends_on:
#       - wordpress
#     build:
#       context: requirements/nginx
#       dockerfile: Dockerfile
#     env_file: .env
#     ports:
#       - "443:443"
#     restart: on-failure

#   mariadb:
#     container_name: mariadb
#     image: mariadb
#     volumes:
#       - mariadb:/var/lib/mariadb
#     networks:
#       - inception_network
#     build:
#       context: requirements/mariadb
#       dockerfile: Dockerfile
#       args:
#         - SQL_DATABASE=${SQL_DATABASE}
#         - SQL_USER=${SQL_USER}
#         - SQL_PASSWORD=${SQL_PASSWORD}
#         - SQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
#     env_file: .env
#     expose:
#       - "3306"
#     restart: on-failure

#   wordpress:
#     container_name: wordpress
#     image: wordpress
#     volumes:
#       - wordpress:/var/www/html
#     networks:
#       - inception_network
#     depends_on:
#       - mariadb
#     build:
#       context: requirements/wordpress
#       dockerfile: Dockerfile
#     env_file: .env
#     expose:
#       - "9000"
#     restart: on-failure

# volumes:
#   wordpress:
#     name: wordpress
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: ${VOLUMES_PATH}/wordpress
#   mariadb:
#     name: mariadb
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: ${VOLUMES_PATH}/mariadb

# networks:
#   inception_network:
#     driver: bridge